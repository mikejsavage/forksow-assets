/*QUAKED worldspawn (0 0 0) ?
Not really an, used to hold map settings.
-------- KEYS --------
gametype : Set to gladiator to make this a gladiator map*/

/*QUAKED info_player_intermission (1 0 1) (-16 -16 -16) (16 16 16)
Camera for intermission screen between matches. Can be aimed by setting the "angles" key or targeting an pointing to an aiming entity. Use only one per level.
-------- KEYS --------
angles : View angles, pitch/yaw/roll
target : Point at a target entity to make the camera look at it*/

/*QUAKED team_CTF_alphaplayer (1 .2 0) (-16 -16 -24) (16 16 40) SUSPENDED
Initial Alpha team spawning position for CTF games. This is where players spawn when they join the Alpha team.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
-------- SPAWNFLAGS --------
SUSPENDED : the spawnpoint will be placed where it was in the map and won't drop automatically to the floor.*/

/*QUAKED team_CTF_alphaspawn (0 .2 1) (-16 -16 -24) (16 16 40) SUSPENDED
Alpha team respawning position for CTF games. This is where Alpha team players respawn after they get fragged.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
-------- SPAWNFLAGS --------
SUSPENDED : the spawnpoint will be placed where it was in the map and won't drop automatically to the floor.*/

/*QUAKED team_CTF_betaplayer (1 .2 0) (-16 -16 -24) (16 16 40) SUSPENDED
Initial Beta team spawning position for CTF games. This is where players spawn when they join the Beta team.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
-------- SPAWNFLAGS --------
SUSPENDED : the spawnpoint will be placed where it was in the map and won't drop automatically to the floor.*/

/*QUAKED team_CTF_betaspawn (0 .2 1) (-16 -16 -24) (16 16 40) SUSPENDED
Beta team respawning position for CTF games. This is where Beta team players respawn after they get fragged.
-------- KEYS --------
target : this can point at a target_give entity for respawn freebies.
-------- SPAWNFLAGS --------
SUSPENDED : the spawnpoint will be placed where it was in the map and won't drop automatically to the floor.*/

/*QUAKED func_group (0 .5 .8) ?
This is not an entity as such, it never reachs the game. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, etc). You cannot group entities with this.
-------- KEYS --------
alphamap : this is the path/name for the art file used to guide the mapping of textures on the terrain surface.
layers : this integer value is the number unique root shaders that will be use on the terrain.
shader : this is the path to the metashader used to assign textures to the terrain entity.
terrain : this is an on/off flag. When set to 1, the entity becomes a terrain entity.
-------- NOTES --------
The TAB key can be used to flip through the component pieces of a selected func_group entity, isolating individual components. To make a func_group into a terrain entity, refer to the Terrain Construction documentation.*/

/*QUAKED func_button (0 .5 .8) ?
When a button is touched by a player, it moves in the direction set by the "angle" key, triggers all its targets, stays pressed by an amount of time set by the "wait" key, then returns to it's original position where it can be operated again.
-------- KEYS --------
angle : determines the direction in which the button will move (up = -1, down = -2).
target : all entities with a matching targetname will be triggered.
speed : speed of button's displacement (default 40).
wait : number of seconds button stays pressed (default 1, -1 = return immediately).
lip : lip remaining at end of move (default 4 units).
health : (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.
noise : custom noise to be played when activated
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
-------- NOTES --------
Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

/*QUAKED func_door (0 .5 .8) ? START_OPEN - CRUSHER NOMONSTER - TOGGLE -
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.
-------- KEYS --------
message : is printed when the door is touched if it is a trigger door and it hasn't been fired yet
angle : determines the opening direction of door (up = -1, down = -2).
speed : determines how fast the door moves (default 600).
wait : number of seconds before door returns (2 default, -1 = never return)
lip : lip remaining at end of move (default 8)
targetname : if set, a func_button or trigger is required to activate the door.
target : fire entities with this targetname when activated
health : (default 0) if set to any non-zero value, the button must take damage (any amount) to activate.
dmg : damage to inflict on player when he blocks operation of door (default 2). Door will reverse direction when blocked unless CRUSHER spawnflag is set.
team: assign the same team name to multiple doors that should operate together (see Notes).
gameteam : makes the door only openable by a player of a specific team (0 = everyone, 1 = FFA players, 2 = alpha,  3 = beta)
noise_start : overrides default start moving sound
noise : overrides default movement sound
noise_stop : overrides default stop moving sound
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
-------- SPAWNFLAGS --------
START_OPEN : &1 the door will spawn in the open state and operate in reverse.
CRUSHER : &4 door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.
NOMONSTER : &8 monsters will not trigger this door
TOGGLE : &32 wait in both the start and end states for a trigger event
-------- NOTES --------
*/

/*QUAKED func_plat (0 .5 .8) ? LOW_TRIGGER
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position. The plat will stay in the raised position until the player steps off.
-------- KEYS --------
speed : determines how fast the plat moves (default 300).
accel : default 20
deccel : default 20
lip : lip remaining at end of move (default 8).
height : if set, this will determine the total amount of vertical travel of the plat, instead of being implicitly assigned by the model's height.
dmg : damage to inflict on player when he blocks operation of plat (default 2). Plat will reverse direction when blocked.
targetname : if set, the trigger that points to this will raise the plat each time it fires.
noise_start : overrides default start moving sound
noise : overrides default movement sound
noise_stop : overrides default stop moving sound
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
-------- SPAWNFLAGS --------
LOW_TRIGGER : &1 the plat is triggered from its lower side
-------- NOTES --------
By default, the total amount of vertical travel of a platform is implicitly determined by the overall vertical size of the brushes of which it's made minus the lip value. But if the "height" key is used, then the total amount of vertical travel of the plat will be exactly that value regardless of the shape and size of the plat and regardless of the value of the "lip" key. Using the "height" key is the best method for any kind of platforms and the only possible one for thin plats which need to travel vertical distances many times their own thickness. Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.
*/

/*QUAKED func_rotating (0 .5 .8) ? START_OFF REVERSE X_AXIS Y_AXIS TOUCH_PAIN STOP - -
You need to have an origin brush as part of this entity.  The center of that brush will be
the point around which it is rotated. It will rotate around the Z axis by default.  You can
check either the X_AXIS or Y_AXIS box to change that.
-------- KEYS --------
targetname : name to be targeted
target : names to target.
speed : determines how fast entity rotates (default 100).
noise_start : overrides default start moving sound
noise : overrides default movement sound
noise_stop : overrides default stop moving sound
model2 : path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).
origin : alternate method of setting XYZ origin of entity's rotation axis and .md3 model included with entity (default "0 0 0" - See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
-------- SPAWNFLAGS --------
START_OFF : &1 must be triggered to start moving.
REVERSE : &2 will cause the it to rotate in the opposite direction.
X_AXIS : &4 entity will rotate along the X axis.
Y_AXIS : &8 entity will rotate along the Y axis.
TOUCH_PAIN : &16 dunno what it does (jal)
STOP : &32 it will stop moving instead when blocked, instead of pushing or crushing them.
-------- NOTES --------
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. Setting the origin key is simply an alternate method to using an origin brush. It will rotate along the Z axis by default. You can check either the X_AXIS or Y_AXIS box to change that. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

/*QUAKED func_train (0 .5 .8) ? START_ON TOGGLE BLOCK_STOPS
Trains are moving platforms that players can ride. The targets origin specifies the min point of the train at each corner. The train spawns at the first target it is pointing at. If the train is the target of a button or trigger, it will not begin moving until activated.
-------- KEYS --------
speed : speed of displacement of train (default 100).
dmg : default 2
target : point to first entity in the path
targetname : train's targetname
noise_start : start moving sound (default silent)
noise : movement sound (default silent)
noise_stop : stop moving sound (default silent)
model2 : path/name of model to include (eg: models/mapobjects/pipe/pipe02.md3).
origin : alternate method of setting XYZ origin of the train's brush(es) and .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
-------- SPAWNFLAGS --------
START_ON : &1
TOGGLE : &2
BLOCK_STOPS : &4
-------- NOTES --------
Setting the origin key is simply an alternate method to using an origin brush. When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value.*/

/*QUAKED func_wall (0 .5 .8) ? TRIGGER_SPAWN TOGGLE START_ON - -
This is just a solid wall if not inhibited. Can be used for conditional walls.
-------- KEYS --------
target : activate entities with this targetname when used
targetname : use this name to target me
-------- SPAWNFLAGS --------
TRIGGER_SPAWN : &1 the wall will not be present until triggered it will then blink in to existance; it will kill anything that was in its way
TOGGLE : &2 only valid for TRIGGER_SPAWN walls this allows the wall to be turned on and off
START_ON : &4 only valid for TRIGGER_SPAWN walls the wall will initially be present
-------- NOTES --------
Untested in Warsow*/

/*QUAKED func_static (0 .5 .8) ?
Static non-solid bspmodel. Can be used for conditional walls and models.
-------- KEYS --------
model2 : path/name of model to include (eg: models/mapobjects/bitch/fembotbig.md3).
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
targetname : NOT SUPPORTED BY RENDERER - if set, a func_button or trigger can make entity disappear from the game (See Notes).
-------- NOTES --------
When using the model2 key, the origin point of the model will correspond to the origin point defined by either the origin brush or the origin coordinate value. If a model is included with a targeted func_static, the brush(es) of the entity will be removed from the game but the .md3 model won't: it will automatically be moved to the (0 0 0) world origin so you should NOT include an .md3 model to a targeted func_static.*/

/*QUAKED func_object (0 .5 .8) ? TRIGGER_SPAWN - -
This is solid bmodel that will fall if its support it removed.
-------- KEYS --------
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
target : fire targets with this name at being used.
targetname : name to be targeted with.
-------- SPAWNFLAGS --------
TRIGGER_SPAWN : &1 spawn this entity when target is fired
-------- NOTES --------
model2 is not supported in func_objects, only map brushes can be safely used as model*/

/*QUAKED func_explosive (0 .5 .8) ? TRIGGER_SPAWN - -
Any brush that you want to explode or break apart.  If you want an
ex0plosion, set dmg and it will do a radius explosion of that amount
at the center of the bursh. If targeted it will not be shootable.
-------- KEYS --------
health : defaults to 100.
mass : defaults to 75.  This determines how much debris is emitted when it explodes.  You get one large chunk per 100 of mass (up to 8) and one small chunk per 25 of mass (up to 16).  So 800 gives the most.
model2 : a md3 model.
origin : alternate method of setting XYZ origin of .md3 model included with entity (See Notes).
light : constantLight radius of .md3 model included with entity. Has no effect on the entity's brushes (default 0).
color : constantLight color of .md3 model included with entity. Has no effect on the entity's brushes (default 1 1 1).
target : fire targets with this name at being used.
targetname : name to be targeted with.
-------- SPAWNFLAGS --------
TRIGGER_SPAWN : &1 spawn this entity when target is fired
-------- NOTES --------
Untested: model2 models might not collide perfectly if used with a brush origin*/

/*QUAKED path_corner (.5 .3 0) (-8 -8 -8) (8 8 8) TELEPORT
Path corner entity that func_trains can be made to follow.
-------- KEYS --------
target : point to next path_corner in the path.
targetname : the train following the path or the previous path_corner in the path points to this.
pathtarget: gets used when an entity that has this path_corner targeted touches it
speed : speed of func_train while moving to the next path corner. This will override the speed value of the train.
wait : number of seconds func_train will pause on path corner before moving to next path corner (default 0 - see Notes).
-------- SPAWNFLAGS --------
TELEPORT : &1 instant move to next target
-------- NOTES --------
Setting the wait key to -1 will not make the train stop on the path corner, it will simply default to 0.*/

/*QUAKED trigger_always (.5 .5 .5) (-8 -8 -8) (8 8 8)
Automatic trigger. It will fire the entities it targets as soon as it spawns in the game.
-------- KEYS --------
target : fire entities with this targetname.
*/

/*QUAKED trigger_push (.5 .5 .5) ? PUSH_ONCE
This is used to create jump pads and launch ramps. It MUST point to a target_position or info_notnull entity to work.
-------- KEYS --------
target : this points to the target_position to which the player will jump.
noise : override default noise ("silent" doesn't make any noise)
wait : time before it can be triggered again.
-------- SPAWNFLAGS --------
PUSH_ONCE : &1 only push when touched the first time
-------- NOTES --------
To make a jump pad or launch ramp, place the target_position/info_notnull entity at the highest point of the jump and target it with this entity.
*/

/*QUAKED trigger_multiple (.5 .5 .5) ? MONSTER NOT_PLAYER TRIGGERED
Variable size repeatable trigger. It will fire the entities it targets when touched by player. Can be made to operate like a trigger_once entity by setting the "wait" key to -1. It can also be activated by another trigger that targets it.
-------- KEYS --------
target : this points to the entity to activate.
targetname : activating trigger points to this.
noise : play this noise when triggered
message : centerprint this text string when triggered
wait : time in seconds until trigger becomes re-triggerable after it's been touched (default 0.2, -1 = trigger once).
-------- SPAWNFLAGS --------
MONSTER : &1 monsters won't activate this trigger unless this flag is set
NOT_PLAYER : &2 players can't trigger this one (for those triggered by other triggers)
TRIGGERED : &4 spawns as triggered and must wait for the "wait" key to pass to be re-triggered
-------- NOTES --------
message is untested*/

/*QUAKED trigger_once (.5 .5 .5) ? MONSTER NOT_PLAYER TRIGGERED
Triggers once, then removes itself. You must set the key "target" to the name of another object in the level that has a matching "targetname".
-------- KEYS --------
target : this points to the entity to activate.
targetname : activating trigger points to this.
noise : play this noise when triggered
message : centerprint this text string when triggered
-------- SPAWNFLAGS --------
MONSTER : &1 monsters won't activate this trigger unless this flag is set
NOT_PLAYER : &2 players can't trigger this one (for those triggered by other triggers)
TRIGGERED : &4 spawns as triggered and must wait for the "wait" key to pass to be re-triggered
-------- NOTES --------
Wait key will be ignored. message is untested*/

/*QUAKED trigger_hurt (.5 .5 .5) ? START_OFF TOGGLE SILENT NO_PROTECTION SLOW KILL FALL
Any player that touches this will be hurt by "dmg" points of damage
-------- KEYS --------
dmg : number of points of damage inflicted to player per "wait" time lapse (default 5 - integer values only).
wait : wait time before hurting again (in seconds. Default 0.1)
noise : sound to be played when inflicting damage
-------- SPAWNFLAGS --------
START_OFF : needs to be triggered (toggle) for damage
TOGGLE : toogle
SILENT : supresses the sizzling sound while player is being hurt.
NO_PROTECTION : player will be hurt regardless of protection (see Notes).
SLOW : changes the damage rate to once per second.
KILL : player will die instantly.
FALL : player will die the next time he touches the ground.
-------- NOTES --------
*/

/*QUAKED trigger_capture_area (.5 .5 .5) ? -
Target it to a misc_capture_area_indicator
-------- KEYS --------
target : this points to the entity to activate.
targetname : activating trigger points to this.
-------- SPAWNFLAGS --------
-------- NOTES --------
Target it to a misc_capture_area_indicator.*/

/*QUAKED trigger_teleport (.5 .5 .5) ? SPECTATOR
Players touching this will be teleported. Target it to a misc_teleporter_dest.
-------- KEYS --------
target : this points to the entity to activate.
targetname : activating trigger points to this.
noise : play this noise when triggered
wait : time in seconds until trigger becomes re-triggerable after it's been touched (default 0.2, -1 = trigger once).
-------- SPAWNFLAGS --------
SPECTATOR : &1 only teleport players moving in spectator mode
-------- NOTES --------
Target it to a misc_teleporter_dest.*/

/*QUAKED misc_teleporter_dest (1 .5 .25) (-32 -32 -24) (32 32 -16)
Teleport destination location point for trigger_teleporter entities.
-------- KEYS --------
angle : direction in which player will look when teleported.
targetname : make the trigger_teleporter point to this.
-------- NOTES --------
Does the same thing as info_teleport_destination*/

/*QUAKED misc_model (1 .5 .25) (-16 -16 -16) (16 16 16) NOSHADOWS SOLID FORCEMETA EXTRUDE_NORMALS EXTRUDE_TERRAIN COLOR_TO_ALPHA NOSMOOTH
Generic placeholder for inserting models in the world. Requires compilation of map geometry to be added to level.
-------- KEYS --------
angle: direction in which model will be oriented.
model: path/name of model to use (eg: models/mapobjects/teleporter/teleporter.ase).
angle: view direction of the model
angles: view direction of the model in PITCH YAW ROLL
modelscale: scaling factor
modelscale_vec: scaling vector for non-uniform scaling
_frame: frame of model to include
_remap: string of the form from;to specifying which texture name of the model to replace by which shader; * is allowed. Any key starting with this prefix will work, so if you need more remappings, create _remap2, etc.
_castshadows: Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. > 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.
_receiveshadows: Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. > 1 = receive shadows only from corresponding keyed entities (see above) and world. < 1 = receive shadows ONLY from corresponding keyed entities.
_lightmapscale: light map resolution factor
-------- SPAWNFLAGS --------
NOSHADOWS: Toggle casting shadows from the model.
SOLID: Make the model solid.
LIGHTMAPPED: (aka: forcemeta) Convert model triangles to bsp metasurfaces
EXTRUDE_NORMALS: extrude along the model normals for clipping
EXTRUDE_TERRAIN: always extrude downwards (for horizontal terrain only)
COLOR_TO_ALPHA: use the color value as alpha (for terrain blending)
NOSMOOTH: Don't smooth normals when importing (forces all faces planar).
*/

/*QUAKED misc_particles (.6 .7 .7) (-8 -8 -8) (8 8 8) SPHERICAL SOLID GRAVITY LIGHT EXPAND_EFFECT SHRINK_EFFECT START_OFF
Generates particles
-------- KEYS --------
angles : direction in which the particles will be thrown (unused when spherical).
radius : radius of the spread of the particles direction (unused when spherical).
shaderName : the particle shader to use.
size : the radius of a particle.
delay : time before the particle dissapears.
gameteam : use teamcolors on the sprites. 2 ALPHA, 3 BETA.
speed : Speed at which the particles will be thrown
count : Number of particles per second
color : color of the light emitted by the particle.
noise : the entity (not each particle) produces this looping sound.
-------- SPAWNFLAGS --------
SPHERICAL : Particles will be generated in all directions around a point
SOLID : Particles will bounce on walls
GRAVITY : Particles will be affected by gravity
LIGHT : enable light on the particles
EXPAND_EFFECT : The particle expands during its lifetime
SHRINK_EFFECT : The particle shrinks during its lifetime

/*QUAKED target_position (0 .5 0) (-8 -8 -8) (8 8 8)
Aiming target for entities like light, misc_portal_camera and trigger_push (jump pads) in particular.
-------- KEYS --------
targetname : the entity that requires an aiming direction points to this.
-------- NOTES --------
To make a jump pad, place this entity at the highest point of the jump and target it with a trigger_push entity.*/

/*QUAKED target_speaker (0 .7 .7) (-8 -8 -8) (8 8 8) LOOPED_ON LOOPED_OFF RELIABLE GLOBAL ACTIVATOR
Normal sounds play each time the target is used.  The reliable flag can be set for crucial voiceovers. Looped sounds are always atten 3 / vol 1, and the use function toggles it on/off. Multiple identical looping sounds will just increase volume without any speed cost.
-------- KEYS --------
noise : path/name of .wav file to play (eg. sound/world/growl1.wav - see Notes).
volume : 0.0 to 1.0
attenuation : -1 = none, send to whole level, 1 = normal fighting sounds, 2 = idle sound level, 3 = ambient sound level
wait : delay in seconds between each time the sound is played ("random" key must be set - see Notes).
random : random time variance in seconds added or subtracted from "wait" delay ("wait" key must be set - see Notes).
targetname : the activating button or trigger points to this.
-------- SPAWNFLAGS --------
LOOPED_ON : &1 sound will loop and initially start on in level (will toggle on/off when triggered).
LOOPED_OFF : &2 sound will loop and initially start off in level (will toggle on/off when triggered).
RELIABLE : &4
GLOBAL : &8 Overrides attenuation setting. Sound will play full volume throughout the level as if it had attenuation -1
ACTIVATOR : &16 sound will play only for the player that activated the target.
-------- NOTES --------
The path portion value of the "noise" key can be replaced by the implicit folder character "*" for triggered sounds that belong to a particular player model. For example, if you want to create a "bottomless pit" in which the player screams and dies when he falls into, you would place a trigger_multiple over the floor of the pit and target a target_speaker with it. Then, you would set the "noise" key to "*falling1.wav". The * character means the current player model's sound folder. So if your current player model is Visor, * = sound/player/visor, if your current player model is Sarge, * = sound/player/sarge, etc. This cool feature provides an excellent way to create "player-specific" triggered sounds in your levels.*/
