<rml>
<head>
	<title>options</title>
	<link type="text/template" href="template.rml" />
	<link rel="stylesheet" type="text/css" href="css/options/player.rcss" />
	<script>
		ElementOptionsForm @playerform;

		Element @crosshairStrong;
		Element @crosshairStrongWhite;
		Cvar cg_crosshair( "cg_crosshair", "1", ::CVAR_ARCHIVE );
		Cvar cg_crosshair_strong( "cg_crosshair_strong", "0", ::CVAR_ARCHIVE );
		Cvar cg_clientHUD( "cg_clientHUD", "", ::CVAR_ARCHIVE );
		Cvar cg_specHUD( "cg_specHUD", "", ::CVAR_ARCHIVE );

		void onPlayerLoad( Element @body, Event @evt )
		{
			onTemplateLoad( body, evt );

			@crosshairStrong = body.getElementById( "crosshair-strong" );
			@crosshairStrongWhite = body.getElementById( "crosshair-strong-white" );

			// get the 'servers' query string parameter value
			String tab = '';
			const Dictionary @dict = body.ownerDocument.URL.getParameters();
			if( dict.get( 'tab', tab ) ) {
				cast<ElementTabSet>(body.getElementById( 'options-set' )).setActiveTab( int(tab) );
			}

			Element @nameclan = body.getElementById( 'nameclan' );
			if( @nameclan != null ) {
				String rml = '<br/><hr class="nicehr"/><br/>';
				rml += '<div class="title">Name</div><input cvar="name" type="text" value="Player"/><br/>';
				rml += '<div class="title">Clan</div><input cvar="clan" type="text" value=""/><br/>';
				nameclan.setInnerRML( rml );
			}
		}

		void onPlayerShow( Element @body, Event @evt )
		{
			onTemplateShow( body, evt );

			//==== form ====
			ElementOptionsForm @f = body.getElementById("hud-options-form");
			f.storeOptions();

			@f = body.getElementById("misc-options-form");
			f.storeOptions();

			//==== crosshairs ====
			updateCrosshair( cg_crosshair_strong, crosshairStrong, crosshairStrongWhite );

			animationsOnShow();
		}

		void updateCrosshair( Cvar cvar, Element @black, Element @white )
		{
			if( @black != null ) {
				if( ( cvar.integer > 0 ) && ( cvar.integer <= 26 ) ) {
					black.setInnerRML( StringUtils::FromCharCode( 64 + cvar.integer ) );
				} else {
					black.setInnerRML( "?" );
				}
			}

			if( @white != null ) {
				if( ( cvar.integer > 0 ) && ( cvar.integer <= 26 ) ) {
					white.setInnerRML( StringUtils::FromCharCode( 96 + cvar.integer ) );
					white.css( 'color', 'white' );
				} else {
					white.setInnerRML( "!" );
					white.css( 'color', 'grey' );
				}
			}
		}

		void nextCrosshair( Cvar cvar, Element @black, Element @white )
		{
			if( cvar.integer < 13 ) {
				cvar.set( cvar.integer + 1 );
			} else {
				cvar.set( 0 );
			}
			updateCrosshair( cvar, black, white );
		}

	</script>
</head>
<body template="baseui" onload="$onPlayerLoad" onshow="$onPlayerShow">

	<!-- divide the screen to two vertical contexts -->	
	<div id="leftside">
	
		<!-- player setup -->
		<div id="player-setup">
			<tabset id="options-set">	
				<tab class="side-tab">HUD</tab>		
				<panel class="dropshadow">
					<optionsform id="hud-options-form" onsubmit="$OptionsForm_OnSubmit">
						<div class="title">Crosshair</div>
						<div id="crosshairs">
							<div id="crosshair" class="crosshair"/>
							<div id="crosshair-white" class="crosshair crosshairwhite" onclick="nextCrosshair(cg_crosshair,crosshair,crosshairWhite);"/>
							<div id="crosshair-strong" class="crosshair"/>
							<div id="crosshair-strong-white" class="crosshair crosshairwhite" onclick="nextCrosshair(cg_crosshair_strong,crosshairStrong,crosshairStrongWhite);"/>
						</div>
						<br/>

						<div class="title">FOV</div>
						<input cvar="fov" type="text" class="short text" value="100" realtime="1"/>
						<br/>
					
						<div class="title">Zoomed in FOV</div>
						<input cvar="zoomfov" type="text" class="short text" value="40" realtime="1"/>
						<br/>
						
						<div class="title">Show FPS counter</div>
						<input cvar="cg_showFps" type="checkbox" realtime="1"/>
						<br/>				
						
						<div class="title">Show speed meter</div>
						<input cvar="cg_showSpeed" type="checkbox" realtime="1"/>
						<br/>				
						
						<div class="title">Show damage indicator</div>
						<input cvar="cg_damage_indicator" type="checkbox" realtime="1"/>
						<br/>
					</optionsform>
				</panel>

				<tab class="side-tab">Misc</tab>
				<panel class="dropshadow">
					<optionsform id="misc-options-form" onsubmit="$OptionsForm_OnSubmit">
						<div class="title">Automatically record demos</div>
						<input cvar="cg_autoaction_demo" type="checkbox" realtime="1"/>
						<br/>
					
						<div class="title">Automatically take scoreboard screenshots</div>
						<input cvar="cg_autoaction_screenshot" type="checkbox" realtime="1"/>
						<br/>	
					</optionsform>
				</panel>
			</tabset>
		</div>
	</div>

	<div id="sidebar">
		<div id="sidebar2">
			<!-- options navigation -->
			<a href="#" onclick="animOpenMenu('options_player.rml');">Player</a>
			<a href="#" onclick="animOpenMenu('options_video.rml');">Video</a>
			<a href="#" onclick="animOpenMenu('options_audio.rml');">Audio</a>
			<a href="#" onclick="animOpenMenu('options_input.rml');">Input</a>
		</div>
	</div>

</body>
</rml>
