<template name="baseui" content="content">
<head>
	<link rel="stylesheet" type="text/css" href="css/html4.rcss" />
	<link rel="stylesheet" type="text/css" href="css/common.rcss" />
	<link rel="stylesheet" type="text/css" href="css/base.rcss" />
	<link rel="stylesheet" type="text/css" href="css/controls.rcss" />
	<link rel="stylesheet" type="text/css" href="/gfx/ui/css/ui_map.rcss" />
	<script src="as/base.as" />
	<script src="as/popup.as" />
	<script src="as/animations.as" />
	<script>
		/* navigation panel */
		Element @navi = null;

		void onTemplateLoad( Element @body, Event @ev )
		{
			if( ev.getPhase() != EVENT_PHASE_TARGET ) {
				// some idiv loading
				return;
			}

			/* set content div height */
			Element @content = body.getElementById( 'content' );

			if( @content != null ) {
				int contentHeight = window.height
					- int( body.getElementById( 'footer' ).clientHeight() )
					- int( content.resolveProp( 'padding-top', 0.0 ) )
					- int( content.resolveProp( 'padding-bottom', 0.0 ) )
					- int( content.resolveProp( 'top', 0.0 ) );

				content.css( 'height', String( contentHeight ) + 'px' );

				int max_width = int( 1024 * window.pixelRatio );
				if( window.width > max_width ) {
					int padding = (window.width - max_width) / 2;
					content.css( 'padding-left', String ( padding ) );
					content.css( 'padding-right', String ( padding ) );
				}
			}

			body.getElementById( 'version_str' ).setInnerRML( game.name + ' ' + game.version.substr( 0, game.version.locate( ' ',  0 ) ) );

			/* grab the navigation panel */
			@navi = body.getElementById( 'navi' );
		}

		void onTemplateShow( Element @body, Event @ev )
		{
			ElementDocument @document = body.ownerDocument;

			/* set active page */
			if( document.title.length() > 0 ) {
				setActivePage( document.title );
			}

			/* make the background invisible if the engine says so */
			Element @background = body.getElementById( 'background-map' );
			if( @background != null ) {
				background.css( 'visibility', window.drawBackground ? 'visible' : 'hidden' );
			}
		}

		/* Enables notification popup and starts the alpha fade process */
		void notificationPopup( const String &in text, bool isError = false )
		{
			/* sets notification text and schedules timer updates */
			NotificationPopup( 'notification', text, 500, isError ? "error" : "ok" );
		}

		/* active page is one of home, join, local, options and demos */
		void setActivePage( const String @id )
		{
			Element @elem;

			if( @navi == null ) {
				// Com_Printf("^4Warning: setActivePage, @navi is null\n");
				return;
			}

			/* disable active pages */
			String activeId = 'link_' + id;

			uint numChildren = navi.getNumChildren();
			for( uint i = 0; i < numChildren; i++ ) {
				Element @child = navi.getChild( i );
				if( child.id == activeId ) {
					child.setAttr( 'href', '#' ); // anchor to self
					child.togglePseudo( 'active', true );
					child.setAttr( 'current', '1' );
				}
				else {
					child.togglePseudo( 'active', false );
					child.setAttr( 'current', '0' );
				}
			}
		}

		void openConsole( Element @self, Event @ev )
		{
			game.execAppend( 'toggleconsole\n' );
		}

		void animationsOnShow( bool noAnim = false, String contentBlock = "leftside" ) // called onShow of every element with animations
		{
			Element @body = @window.document.body;

			Element @content = @body.getElementById( contentBlock );
			if( @content == null ) {
				console.warn( 'animationsOnShow: missing content block "' + contentBlock + '"\n' );
				return;
			}

			if( noAnim ) {
				MoveAnimation anim( content, 0, ANIM_ORIGIN, ANIM_ORIGIN, EASE_OUT, null );
			}
			else {
				MoveAnimation anim( content, ANIMATION_DURATION_FAST, ANIM_LEFT, ANIM_ORIGIN, EASE_OUT, null );
			}
		}

		String menuloc;
		void animOpenMenu( String menu ) // This function automatically animates the content away and opens a new menu after that.
		{
			if( menu.length() <= 0 )
				return;

			URL currentURL( window.document.URL );
			String currentDocFilename = currentURL.getFileName() + '.' + currentURL.getFileExtension();
			if( currentDocFilename == menu ) {
				// FIXME: not sure this works correct in all cases of valid input URL
				return;
			}

			menuloc = menu;

			Element @body = @window.document.body;
			Element @content = @body.getElementById( "leftside" );
			if( @content == null )
				return;

			MoveAnimation anim( content, ANIMATION_DURATION_FAST, ANIM_ORIGIN, ANIM_LEFT, EASE_IN, animOpenMenuCallback );
		}

		void animOpenMenuCallback()
		{
			window.location = menuloc;
		}

		void quitGame( Element @self, Event @ev )
		{
			game.execAppend( "quit\n" );
		}
	</script>
</head>
<!-- ch : onshow and onhide dont work in template, you have to explicitly define them in each page using template :( -->
<body onload="$onTemplateLoad" onshow="$onTemplateShow">
	<!-- Few layout display divs -->
	<!-- YELLOW shows the location of header leaving 1 visible pixel below it -->
	<!--
	<div style="position:fixed; width:100%; height:69px; top:0px; left:0px; background:#ff0;" />
	-->

	<worldview id="background-map" class="ui-map" />

	<blur />

	<div id="background-overlay" />

	<div id="header">
		<div id="header-top" />
	</div>

	<!-- Main navigation bar -->
	<div id="navi">
		<a href="index.rml" id="link_profile">Home</a>
		<a href="game_join.rml" id="link_game">Play</a>
		<a href="options.rml" id="link_options">Options</a>
		<a href="#" id="link_quit" onclick="OpenQuitDialog();">Quit</a>
	</div>

	<!-- Saved- dialog -->
	<div id="notification">
	</div>

	<!-- Content -->
	<div id="content">
	</div>

	<!-- Footer -->
	<div id="footer">
		<hr class="w100p nicehr" />
		<span id="version_str"></span>
	</div>

	<div id="console">
		<!-- Console icon -->
		<img src="/ui/baseui/gfx/console.tga" onclick="$openConsole" id="link_console" />
	</div>

</body>
</template>
